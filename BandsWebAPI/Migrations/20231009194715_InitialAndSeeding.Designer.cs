// <auto-generated />
using BandsWebAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BandsWebAPI.Migrations
{
    [DbContext(typeof(BandsContext))]
    [Migration("20231009194715_InitialAndSeeding")]
    partial class InitialAndSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("BandMusician", b =>
                {
                    b.Property<int>("BandsBandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusiciansMusicianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BandsBandId", "MusiciansMusicianId");

                    b.HasIndex("MusiciansMusicianId");

                    b.ToTable("BandMusician");
                });

            modelBuilder.Entity("BandsWebAPI.Entities.MusicianBands", b =>
                {
                    b.Property<int>("MusicianBandsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MusicianBandsId");

                    b.HasIndex("BandId");

                    b.HasIndex("MusicianId");

                    b.ToTable("MusicianBands");

                    b.HasData(
                        new
                        {
                            MusicianBandsId = 1,
                            BandId = 1,
                            MusicianId = 1
                        },
                        new
                        {
                            MusicianBandsId = 2,
                            BandId = 2,
                            MusicianId = 2
                        });
                });

            modelBuilder.Entity("Music_Bands.Entities.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateOfRelease")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId");

                    b.HasIndex("BandId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            BandId = 1,
                            DateOfRelease = 1992,
                            Title = "Opiate"
                        },
                        new
                        {
                            AlbumId = 2,
                            BandId = 2,
                            DateOfRelease = 1990,
                            Title = "Harmony Corruption"
                        });
                });

            modelBuilder.Entity("Music_Bands.Entities.Band", b =>
                {
                    b.Property<int>("BandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateOfFoundation")
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("BandId");

                    b.ToTable("Bands");

                    b.HasData(
                        new
                        {
                            BandId = 1,
                            DateOfFoundation = 1990,
                            IsActive = false,
                            Name = "Tool"
                        },
                        new
                        {
                            BandId = 2,
                            DateOfFoundation = 1981,
                            IsActive = false,
                            Name = "Napalm Death"
                        });
                });

            modelBuilder.Entity("Music_Bands.Entities.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("DescriptionId");

                    b.HasIndex("BandId")
                        .IsUnique();

                    b.ToTable("Descriptions");

                    b.HasData(
                        new
                        {
                            DescriptionId = 1,
                            BandId = 1,
                            Genres = "Alternative metal"
                        },
                        new
                        {
                            DescriptionId = 2,
                            BandId = 2,
                            Genres = "Death metal"
                        });
                });

            modelBuilder.Entity("Music_Bands.Entities.Musician", b =>
                {
                    b.Property<int>("MusicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("MusicianId");

                    b.ToTable("Musicians");

                    b.HasData(
                        new
                        {
                            MusicianId = 1,
                            Name = "Maynard James Keenan",
                            Role = "Vocal"
                        },
                        new
                        {
                            MusicianId = 2,
                            Name = "Mark Barney Greenway",
                            Role = "Vocal"
                        });
                });

            modelBuilder.Entity("BandMusician", b =>
                {
                    b.HasOne("Music_Bands.Entities.Band", null)
                        .WithMany()
                        .HasForeignKey("BandsBandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Music_Bands.Entities.Musician", null)
                        .WithMany()
                        .HasForeignKey("MusiciansMusicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandsWebAPI.Entities.MusicianBands", b =>
                {
                    b.HasOne("Music_Bands.Entities.Band", "Band")
                        .WithMany()
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Music_Bands.Entities.Musician", "Musician")
                        .WithMany()
                        .HasForeignKey("MusicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");

                    b.Navigation("Musician");
                });

            modelBuilder.Entity("Music_Bands.Entities.Album", b =>
                {
                    b.HasOne("Music_Bands.Entities.Band", "Band")
                        .WithMany("Albums")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");
                });

            modelBuilder.Entity("Music_Bands.Entities.Description", b =>
                {
                    b.HasOne("Music_Bands.Entities.Band", "Band")
                        .WithOne("Description")
                        .HasForeignKey("Music_Bands.Entities.Description", "BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");
                });

            modelBuilder.Entity("Music_Bands.Entities.Band", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Description")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
